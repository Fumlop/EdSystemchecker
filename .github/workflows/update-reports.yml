name: Update PowerPlay Reports

on:
  # Manual trigger via GitHub UI
  workflow_dispatch:
  # Scheduled updates (every 4 hours during PowerPlay cycle)
  schedule:
    - cron: '0 */2 * * *'

# Grant write permissions to the workflow
permissions:
  contents: write
  actions: read

jobs:
  update-reports:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 lxml
        
    - name: Create html directory
      run: mkdir -p html
        
    - name: Download Inara HTML files
      run: |
        echo "üåê Downloading PowerPlay data from Inara..."
        
        # Download Felicia Winters PowerPlay pages (Power ID 5) with corrected URLs
        curl -s -o html/power-controlled-5.html "https://inara.cz/elite/power-controlled/5/"
        curl -s -o html/power-exploited-5.html "https://inara.cz/elite/power-exploited/5/"
        curl -s -o html/power-contested-5.html "https://inara.cz/elite/power-contested/5/"
        
        echo "‚úÖ Downloaded HTML files:"
        ls -la html/
        
    - name: Extract system data
      run: |
        echo "üîÑ Extracting system data from HTML files..."
        python python/extract.py
        
    - name: Generate all reports
      run: |
        echo "üìÑ Generating PowerPlay reports..."
        python python/create_universal_md.py stronghold
        python python/create_universal_md.py fortified  
        python python/create_universal_md.py exploited
        python python/create_contested_md.py
        
    - name: Check for changes
      id: changes
      run: |
        git add *.md json/*.json html/*.html
        if git diff --staged --quiet; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Try to commit and push with error handling
        if git commit -m "ü§ñ Auto-update PowerPlay reports - $(date '+%Y-%m-%d %H:%M:%S UTC')"; then
          echo "‚úÖ Changes committed successfully"
          
          # Pull latest changes before pushing
          echo "üîÑ Pulling latest changes from remote..."
          git pull --rebase origin main || {
            echo "‚ö†Ô∏è Pull failed, trying merge strategy..."
            git pull origin main
          }
          
          # Try to push with retry logic
          for i in {1..3}; do
            if git push; then
              echo "‚úÖ Changes pushed to GitHub successfully"
              break
            else
              echo "‚ö†Ô∏è Push attempt $i failed, retrying in 5 seconds..."
              sleep 5
              
              # Try pulling again before retry
              if [ $i -lt 3 ]; then
                echo "üîÑ Pulling latest changes before retry..."
                git pull --rebase origin main || git pull origin main
              fi
            fi
          done
        else
          echo "‚ùå Failed to commit changes"
          exit 1
        fi
        
    - name: Summary
      run: |
        if [ "${{ steps.changes.outputs.changes }}" == "true" ]; then
          echo "‚úÖ Reports updated and pushed to repository"
        else
          echo "‚ÑπÔ∏è No changes detected, repository up to date"
        fi
